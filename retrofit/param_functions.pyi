from typing import Any, Callable, Optional, TypeVar, overload

T = TypeVar("T")

@overload
def Header(name: Optional[str] = None) -> Any: ...
@overload
def Header(name: Optional[str] = None, *, default: T) -> T: ...
@overload
def Query(name: Optional[str] = None, *, required: bool) -> Any: ...
@overload
def Query(name: Optional[str] = None, *, default: T, required: bool) -> T: ...
@overload
def Path(name: Optional[str] = None) -> Any: ...
@overload
def Path(name: Optional[str] = None, *, default: T) -> T: ...
@overload
def Cookie(name: Optional[str] = None) -> Any: ...
@overload
def Cookie(name: Optional[str] = None, *, default: T) -> T: ...
@overload
def Body() -> Any: ...
@overload
def Body(*, default: T) -> T: ...
@overload
def Body(*, default_factory: Callable[[], T]) -> T: ...
def Headers() -> Any: ...
def Queries() -> Any: ...
def Cookies() -> Any: ...
